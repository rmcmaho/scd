AWSTemplateFormatVersion: '2010-09-09'
Parameters:
    CodeS3BucketName:
        Type: String
        Description: Name of bucket containing lambda code packages.
Resources:
    StellarSectorsTable:
        Type: "AWS::DynamoDB::Table"
        Properties:
            AttributeDefinitions:
                -
                  AttributeName: sector_group
                  AttributeType: S
                -
                  AttributeName: sector_id
                  AttributeType: S
            KeySchema:
                -
                  AttributeName: sector_group
                  KeyType: HASH
                -
                  AttributeName: sector_id
                  KeyType: RANGE
            ProvisionedThroughput:
                ReadCapacityUnits: 1
                WriteCapacityUnits: 1
            TableName: stellar_sectors
    StellarSystemsTable:
        Type: "AWS::DynamoDB::Table"
        Properties:
            AttributeDefinitions:
                -
                  AttributeName: sector_id
                  AttributeType: S
                -
                  AttributeName: system_name
                  AttributeType: S
            KeySchema:
                -
                  AttributeName: sector_id
                  KeyType: HASH
                -
                  AttributeName: system_name
                  KeyType: RANGE
            ProvisionedThroughput:
                ReadCapacityUnits: 1
                WriteCapacityUnits: 1
            TableName: stellar_systems
    SystemSearchesTable:
        Type: "AWS::DynamoDB::Table"
        Properties:
            AttributeDefinitions:
                -
                  AttributeName: system_prefix
                  AttributeType: S
                -
                  AttributeName: system_name
                  AttributeType: S
            KeySchema:
                -
                  AttributeName: system_prefix
                  KeyType: HASH
                -
                  AttributeName: system_name
                  KeyType: RANGE
            ProvisionedThroughput:
                ReadCapacityUnits: 1
                WriteCapacityUnits: 1
            TableName: system_searches

    StellarLambdaApi:
        Type: AWS::Lambda::Function
        Properties:
            Code:
                S3Bucket: !Ref CodeS3BucketName
                S3Key: lambda_package.zip
            Handler: stellar_code_function.handler
            Runtime: python3.6
            Role: !GetAtt StellarLambdaRole.Arn
    StellarLambdaRole:
        Type: AWS::IAM::Role
        Properties:
            AssumeRolePolicyDocument:
                Version: 2012-10-17
                Statement:
                    - Effect: Allow
                      Principal:
                           Service: lambda.amazonaws.com
                      Action: sts:AssumeRole
            ManagedPolicyArns:
                - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
                - arn:aws:iam::aws:policy/AmazonDynamoDBFullAccess
                - arn:aws:iam::aws:policy/CloudWatchFullAccess
                - arn:aws:iam::aws:policy/AmazonS3ReadOnlyAccess
    StellarLambdaRolePermission:
        Type: AWS::Lambda::Permission
        Properties:
            FunctionName: !Ref StellarLambdaApi
            Action: lambda:InvokeFunction
            Principal: apigateway.amazonaws.com
            SourceArn: !Sub "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${StellarHttpApi}/*"
    
    StellarHttpApi:
        Type: "AWS::ApiGateway::RestApi"
        Properties:
            Name: "StellarHttpApi"
            Description: "API for interacting with stellar systems."
            FailOnWarnings: True
    ApiResourceStellar:
        Type: "AWS::ApiGateway::Resource"
        DependsOn: StellarHttpApi
        Properties:
            RestApiId: !Ref StellarHttpApi
            ParentId: !GetAtt StellarHttpApi.RootResourceId
            PathPart: "stellar"
    ApiResourceStellarCode:
        Type: "AWS::ApiGateway::Resource"
        DependsOn: ApiResourceStellar
        Properties:
            RestApiId: !Ref StellarHttpApi
            ParentId: !Ref ApiResourceStellar
            PathPart: "code"
    StellarCodeMethodPOST:
        Type: "AWS::ApiGateway::Method"
        DependsOn: ApiResourceStellarCode
        Properties:
            RestApiId: !Ref StellarHttpApi
            ResourceId: !Ref ApiResourceStellarCode
            HttpMethod: POST
            AuthorizationType: NONE
            MethodResponses:
                - StatusCode: "200"
            Integration:
                Type: AWS_PROXY
                IntegrationHttpMethod: POST
                Uri: !Sub "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${StellarLambdaApi.Arn}/invocations"
                IntegrationResponses:
                    - StatusCode: "200"
    StellarHttpDeployment:
        Type: "AWS::ApiGateway::Deployment"
        DependsOn: StellarCodeMethodPOST
        Properties:
            RestApiId: !Ref StellarHttpApi
            StageName: DummyStage




Outputs:
    StellarLambdaApiArn:
        Value: !GetAtt StellarLambdaApi.Arn
    StellarHttpApiArn:
        Value: !Sub "arn:aws:apigateway:${AWS::Region}::/restapis/${StellarHttpApi.RootResourceId}*"
