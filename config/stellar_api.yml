AWSTemplateFormatVersion: '2010-09-09'
Parameters:
    CodeS3BucketName:
        Type: String
        Description: Name of bucket containing lambda code packages.
Resources:
    StellarSectorsTable:
        Type: "AWS::DynamoDB::Table"
        Properties:
            AttributeDefinitions:
                -
                  AttributeName: sector_group
                  AttributeType: S
                -
                  AttributeName: sector_id
                  AttributeType: S
            KeySchema:
                -
                  AttributeName: sector_group
                  KeyType: HASH
                -
                  AttributeName: sector_id
                  KeyType: RANGE
            ProvisionedThroughput:
                ReadCapacityUnits: 1
                WriteCapacityUnits: 1
            TableName: stellar_sectors
    StellarSystemsTable:
        Type: "AWS::DynamoDB::Table"
        Properties:
            AttributeDefinitions:
                -
                  AttributeName: sector_id
                  AttributeType: S
                -
                  AttributeName: system_name
                  AttributeType: S
            KeySchema:
                -
                  AttributeName: sector_id
                  KeyType: HASH
                -
                  AttributeName: system_name
                  KeyType: RANGE
            ProvisionedThroughput:
                ReadCapacityUnits: 1
                WriteCapacityUnits: 1
            TableName: stellar_systems
    SystemSearchesTable:
        Type: "AWS::DynamoDB::Table"
        Properties:
            AttributeDefinitions:
                -
                  AttributeName: system_prefix
                  AttributeType: S
                -
                  AttributeName: system_name
                  AttributeType: S
            KeySchema:
                -
                  AttributeName: system_prefix
                  KeyType: HASH
                -
                  AttributeName: system_name
                  KeyType: RANGE
            ProvisionedThroughput:
                ReadCapacityUnits: 1
                WriteCapacityUnits: 1
            TableName: system_searches
    StellarLambdaApi:
        Type: AWS::Lambda::Function
        Properties:
            Code:
                S3Bucket: !Ref CodeS3BucketName
                S3Key: lambda_package.zip
            Handler: stellar_code_function.handler
            Runtime: python3.6
            Role: !GetAtt StellarLambdaRole.Arn
    StellarLambdaRole:
        Type: AWS::IAM::Role
        Properties:
            AssumeRolePolicyDocument:
                Version: 2012-10-17
                Statement:
                    - Effect: Allow
                      Principal:
                           Service: lambda.amazonaws.com
                      Action: sts:AssumeRole
            ManagedPolicyArns:
                - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
                - arn:aws:iam::aws:policy/AmazonDynamoDBFullAccess
                - arn:aws:iam::aws:policy/CloudWatchFullAccess
    StellarLambdaRolePermission:
        Type: AWS::Lambda::Permission
        Properties:
            FunctionName: !Ref StellarLambdaApi
            Action: lambda:InvokeFunction
            Principal: apigateway.amazonaws.com
            SourceArn: !Sub "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${StellarHttpApi}/*"
    StellarHttpApi:
        Type: 'AWS::ApiGateway::RestApi'
        Properties:
            Name: "Stellar HTTP API"
            Description: "API for interacting with stellar systems."
            FailOnWarnings: True
            Body:
                StageName: Prod
                DefinitionBody:
                    swagger: '2.0'
                    info:
                        title: scd
                    paths:
                        '/stellar/code':
                            post:
                                responses:
                                    '200':
                                        description: OK
                                        content:
                                            'application/json':
                                                schema: Empty
                                consumes:
                                - 'application/json'
                                produces:
                                - 'application/json'
                                x-amazon-apigateway-request-validator: basic
                                x-amazon-apigateway-integration:
                                    httpMethod: POST
                                    type: AWS_PROXY
                                    uri: !Sub 'arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${StellarLambdaApi.Arn}/invocations'
                                    passThroughBehavior: when_no_match
                                    responses:
                                        default:
                                            statusCode: '200'
                                            responseTemplates:
                                                'application/json': ''
Outputs:
    CodeS3BucketArn:
        Value: !GetAtt CodeS3Bucket.Arn
    StellarLambdaApiArn:
        Value: !GetAtt StellarLambdaApi.Arn
    StellarHttpApiArn:
        Value: !Sub "arn:aws:apigateway:${AWS::Region}::/restapis/${StellarHttpApi.RootResourceId}*"
